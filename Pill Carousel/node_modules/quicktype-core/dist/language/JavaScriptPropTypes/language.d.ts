import { type RenderContext } from "../../Renderer";
import { EnumOption, type Option } from "../../RendererOptions";
import { AcronymStyleOptions } from "../../support/Acronyms";
import { TargetLanguage } from "../../TargetLanguage";
import { type FixMeOptionsAnyType, type FixMeOptionsType } from "../../types";
import { JavaScriptPropTypesRenderer } from "./JavaScriptPropTypesRenderer";
export declare const javaScriptPropTypesOptions: {
    acronymStyle: EnumOption<AcronymStyleOptions>;
    converters: EnumOption<import("../../support/Converters").ConvertersOptions>;
    moduleSystem: EnumOption<boolean>;
};
export declare class JavaScriptPropTypesTargetLanguage extends TargetLanguage {
    protected getOptions(): Array<Option<FixMeOptionsAnyType>>;
    constructor(displayName?: string, names?: string[], extension?: string);
    protected makeRenderer(renderContext: RenderContext, untypedOptionValues: FixMeOptionsType): JavaScriptPropTypesRenderer;
}
