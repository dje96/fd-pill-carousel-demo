import { type ConvenienceRenderer } from "../../ConvenienceRenderer";
import { type RenderContext } from "../../Renderer";
import { EnumOption, type Option, StringOption } from "../../RendererOptions";
import { AcronymStyleOptions } from "../../support/Acronyms";
import { TargetLanguage } from "../../TargetLanguage";
import { type FixMeOptionsAnyType, type FixMeOptionsType } from "../../types";
export declare enum Framework {
    None = "None",
    Jackson = "Jackson",
    Klaxon = "Klaxon",
    KotlinX = "KotlinX"
}
export declare const kotlinOptions: {
    framework: EnumOption<Framework>;
    acronymStyle: EnumOption<AcronymStyleOptions>;
    packageName: StringOption;
};
export declare class KotlinTargetLanguage extends TargetLanguage {
    constructor();
    protected getOptions(): Array<Option<FixMeOptionsAnyType>>;
    get supportsOptionalClassProperties(): boolean;
    get supportsUnionsWithBothNumberTypes(): boolean;
    protected makeRenderer(renderContext: RenderContext, untypedOptionValues: FixMeOptionsType): ConvenienceRenderer;
}
