import { type RenderContext } from "../../Renderer";
import { BooleanOption, type Option } from "../../RendererOptions";
import { TargetLanguage } from "../../TargetLanguage";
import { type FixMeOptionsAnyType, type FixMeOptionsType } from "../../types";
import { TypeScriptEffectSchemaRenderer } from "./TypeScriptEffectSchemaRenderer";
export declare const typeScriptEffectSchemaOptions: {
    justSchema: BooleanOption;
};
export declare class TypeScriptEffectSchemaTargetLanguage extends TargetLanguage {
    protected getOptions(): Array<Option<FixMeOptionsAnyType>>;
    constructor(displayName?: string, names?: string[], extension?: string);
    protected makeRenderer(renderContext: RenderContext, untypedOptionValues: FixMeOptionsType): TypeScriptEffectSchemaRenderer;
}
