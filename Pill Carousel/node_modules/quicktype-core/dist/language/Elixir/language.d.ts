import { type RenderContext } from "../../Renderer";
import { BooleanOption, type Option, StringOption } from "../../RendererOptions";
import { TargetLanguage } from "../../TargetLanguage";
import { type FixMeOptionsAnyType, type FixMeOptionsType } from "../../types";
import { ElixirRenderer } from "./ElixirRenderer";
export declare const elixirOptions: {
    justTypes: BooleanOption;
    namespace: StringOption;
};
export declare class ElixirTargetLanguage extends TargetLanguage {
    constructor();
    protected getOptions(): Array<Option<FixMeOptionsAnyType>>;
    get supportsOptionalClassProperties(): boolean;
    protected get defaultIndentation(): string;
    protected makeRenderer(renderContext: RenderContext, untypedOptionValues: FixMeOptionsType): ElixirRenderer;
}
